var keys = require('./keys.json'),
    stream = require('stream'),
    cursor_keys = require('./cursor_keys.json');

function cursor(action) {

  function next(key) {
    return function() {
      return action.then(cur => cur[key].apply(c,arguments));
    };
  }

  var obj = cursor_keys.reduce( (p,key) => {
    p[key] = next(key);
    return p;
  },{});

  obj.stream = function() {
    var s = new stream.PassThrough({objectMode:true});
    action.then(cur => cur.pipe(s));
    return s;
  };

  obj.pipe = d => action.then(cur => cur.pipe(d)) && d;
  
  return obj;
}

module.export = function(db,collection) {
  var c = Promise.resolve(db)
    .then(db => db.collection(collection));

  function then(key) {
    return function() {
      var action = c.then(c => c[key].apply(c,arguments));
      return (key === 'find') ? cursor(action) : action;
    };
  }

  return keys.reduce(function(p,key) {
    p[key] = then(key);
    return p;
  },{});
};



var mongo = require('mongodb');
var db = mongo.connect('mongodb://localhost:27017/embark2');
var etl = require('etl')

var a = module.export(db,'applications').find().stream().pipe(etl.map(console.log))
